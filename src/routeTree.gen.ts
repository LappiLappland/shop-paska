/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as IndexImport } from './routes/index'
import { Route as SigninIndexImport } from './routes/signin.index'
import { Route as LogoutIndexImport } from './routes/logout.index'
import { Route as FavouriteIndexImport } from './routes/favourite.index'
import { Route as CatalogIndexImport } from './routes/catalog.index'
import { Route as CartIndexImport } from './routes/cart.index'
import { Route as ProductProductIdImport } from './routes/product.$productId'
import { Route as CatalogSplatImport } from './routes/catalog.$'
import { Route as ProfilePasswordIndexImport } from './routes/profile/password.index'
import { Route as ProfileEmailIndexImport } from './routes/profile/email.index'
import { Route as ProfileAccountIndexImport } from './routes/profile/account.index'
import { Route as OrderPaymentIndexImport } from './routes/order/payment.index'
import { Route as OrderDeliveryIndexImport } from './routes/order/delivery.index'
import { Route as OrderConfirmationIndexImport } from './routes/order/confirmation.index'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SigninIndexRoute = SigninIndexImport.update({
  path: '/signin/',
  getParentRoute: () => rootRoute,
} as any)

const LogoutIndexRoute = LogoutIndexImport.update({
  path: '/logout/',
  getParentRoute: () => rootRoute,
} as any)

const FavouriteIndexRoute = FavouriteIndexImport.update({
  path: '/favourite/',
  getParentRoute: () => rootRoute,
} as any)

const CatalogIndexRoute = CatalogIndexImport.update({
  path: '/catalog/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const ProductProductIdRoute = ProductProductIdImport.update({
  path: '/product/$productId',
  getParentRoute: () => rootRoute,
} as any)

const CatalogSplatRoute = CatalogSplatImport.update({
  path: '/catalog/$',
  getParentRoute: () => rootRoute,
} as any)

const ProfilePasswordIndexRoute = ProfilePasswordIndexImport.update({
  path: '/password/',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileEmailIndexRoute = ProfileEmailIndexImport.update({
  path: '/email/',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileAccountIndexRoute = ProfileAccountIndexImport.update({
  path: '/account/',
  getParentRoute: () => ProfileRoute,
} as any)

const OrderPaymentIndexRoute = OrderPaymentIndexImport.update({
  path: '/order/payment/',
  getParentRoute: () => rootRoute,
} as any)

const OrderDeliveryIndexRoute = OrderDeliveryIndexImport.update({
  path: '/order/delivery/',
  getParentRoute: () => rootRoute,
} as any)

const OrderConfirmationIndexRoute = OrderConfirmationIndexImport.update({
  path: '/order/confirmation/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/catalog/$': {
      preLoaderRoute: typeof CatalogSplatImport
      parentRoute: typeof rootRoute
    }
    '/product/$productId': {
      preLoaderRoute: typeof ProductProductIdImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/catalog/': {
      preLoaderRoute: typeof CatalogIndexImport
      parentRoute: typeof rootRoute
    }
    '/favourite/': {
      preLoaderRoute: typeof FavouriteIndexImport
      parentRoute: typeof rootRoute
    }
    '/logout/': {
      preLoaderRoute: typeof LogoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/signin/': {
      preLoaderRoute: typeof SigninIndexImport
      parentRoute: typeof rootRoute
    }
    '/order/confirmation/': {
      preLoaderRoute: typeof OrderConfirmationIndexImport
      parentRoute: typeof rootRoute
    }
    '/order/delivery/': {
      preLoaderRoute: typeof OrderDeliveryIndexImport
      parentRoute: typeof rootRoute
    }
    '/order/payment/': {
      preLoaderRoute: typeof OrderPaymentIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/account/': {
      preLoaderRoute: typeof ProfileAccountIndexImport
      parentRoute: typeof ProfileImport
    }
    '/profile/email/': {
      preLoaderRoute: typeof ProfileEmailIndexImport
      parentRoute: typeof ProfileImport
    }
    '/profile/password/': {
      preLoaderRoute: typeof ProfilePasswordIndexImport
      parentRoute: typeof ProfileImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ProfileRoute.addChildren([
    ProfileAccountIndexRoute,
    ProfileEmailIndexRoute,
    ProfilePasswordIndexRoute,
  ]),
  CatalogSplatRoute,
  ProductProductIdRoute,
  CartIndexRoute,
  CatalogIndexRoute,
  FavouriteIndexRoute,
  LogoutIndexRoute,
  SigninIndexRoute,
  OrderConfirmationIndexRoute,
  OrderDeliveryIndexRoute,
  OrderPaymentIndexRoute,
])

/* prettier-ignore-end */
